name: CI

on:
  push:
#    tags:
#      - "v[0-9]+.[0-9]]+.[0-9]+*"
    workflow_dispatch:
      inputs:
        version:
          description: 'Version - in the form of v1.2.3'
          required: true
          type: string

env:
  CARGO_TERM_COLOR: always
  GAME_EXECUTABLE_NAME: training_assistant

permissions:
  contents: write

jobs:
  get-version:
    runs-on: ubuntu-latest
    steps:
      - name: Get tag
        id: tag
        run: echo "tag=${GITHUB_REF#refs/tags/}" >> "$GITHUB_OUTPUT"
    outputs:
      version: ${{ inputs.version || steps.tag.outputs.tag }}

  build-linux:
    runs-on: ubuntu-latest
    needs: get-version
    env:
      VERSION: ${{needs.get-version.outputs.version}}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
      - name: Install rust toolchain
        uses: dtolnay/rust-toolchain@master
        with:
          toolchain: stable
      - name: Install Dependencies
        run: sudo apt-get update; sudo apt-get install pkg-config libx11-dev libasound2-dev libudev-dev
      - name: Build release
        run: |
          cargo build --profile dist
      - name: Prepare release
        run: |
          chmod +x target/dist/${{ env.GAME_EXECUTABLE_NAME }}
          mv target/dist/${{ env.GAME_EXECUTABLE_NAME }} .
      - name: Bundle relkease
        run: |
          tar -czf ${{ env.GAME_EXECUTABLE_NAME }}_linux.tar.gz ${{ env.GAME_EXECUTABLE_NAME }} assets      - name: Upload release
          uses: svenstaro/upload-release-action@v2
          with:
            repo_token: ${{ secrets.GITHUB_TOKEN }}
            file: ${{ env.GAME_EXECUTABLE_NAME }}_${{ env.VERSION }}_linux.tar.gz
            asset_name: ${{ env.VERSION }}
            tag: ${{ env.VERSION }}
            overwrite: true
